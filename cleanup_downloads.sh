#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –∏ —Å—Ç–∏–ª–∏
GREEN="\e[32m"
PURPLE="\e[35m"
YELLOW="\e[33m"
ORANGE="\e[38;5;214m"
BLUE="\e[34m"
PINK="\e[38;5;206m"
RED="\e[31m"
CYAN="\e[36m"
BOLD="\e[1m"
DIM="\e[2m"
RESET="\e[0m"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏–º–≤–æ–ª—ã
CHECK_MARK="‚úì"
CROSS_MARK="‚úó"
ARROW="‚Üí"
FOLDER="üìÅ"
WARNING="‚ö†Ô∏è"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º
DOWNLOADS_DIR="$HOME/–ó–∞–≥—Ä—É–∑–∫–∏"
IMAGES_DIR="$HOME/–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
MUSIC_DIR="$HOME/–ú—É–∑—ã–∫–∞"
VIDEOS_DIR="$HOME/–í–∏–¥–µ–æ"
DOCUMENTS_DIR="$HOME/–î–æ–∫—É–º–µ–Ω—Ç—ã"
PROGRAM_DIR="$HOME/–ü—Ä–æ–≥—Ä–∞–º–º—ã"
ARCHIVES_DIR="$HOME/Archives"
TRASH_DIR="$HOME/.local/share/Trash/files"

# –°–æ–∑–¥–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª
LOG_DIR="$HOME/.logs"
LOG_FILE="$LOG_DIR/cleanup_$(date +%Y%m%d_%H%M%S).log"
mkdir -p "$LOG_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_message() {
    local message="$1"
    local type="$2"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    case "$type" in
        "info")
            echo -e "${CYAN}${BOLD}[INFO]${RESET} $message" | tee -a "$LOG_FILE"
            ;;
        "success")
            echo -e "${GREEN}${BOLD}[${CHECK_MARK}]${RESET} $message" | tee -a "$LOG_FILE"
            ;;
        "warning")
            echo -e "${YELLOW}${BOLD}[${WARNING}]${RESET} $message" | tee -a "$LOG_FILE"
            ;;
        "error")
            echo -e "${RED}${BOLD}[${CROSS_MARK}]${RESET} $message" | tee -a "$LOG_FILE"
            ;;
        *)
            echo -e "$message" | tee -a "$LOG_FILE"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
show_progress() {
    local current=$1
    local total=$2
    local width=50
    local percentage=$((current * 100 / total))
    local filled=$((percentage * width / 100))
    local empty=$((width - filled))
    
    printf "\r${DIM}[${RESET}"
    printf "%${filled}s" | tr ' ' '‚ñà'
    printf "%${empty}s" | tr ' ' '‚ñë'
    printf "${DIM}]${RESET} %3d%%" $percentage
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
print_separator() {
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' '‚îÄ'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
print_header() {
    local title="$1"
    local width=${COLUMNS:-$(tput cols)}
    local padding=$(( (width - ${#title} - 2) / 2 ))
    
    echo
    print_separator
    printf "%${padding}s${BOLD}%s${RESET}%${padding}s\n" "" "$title" ""
    print_separator
}

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
create_directories() {
    local dirs=("$PROGRAM_DIR" "$ARCHIVES_DIR" "$DOCUMENTS_DIR" "$LOG_DIR")
    local total=${#dirs[@]}
    local current=0
    
    print_header "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"
    
    for dir in "${dirs[@]}"; do
        if [ ! -d "$dir" ]; then
            mkdir -p "$dir" && log_message "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir" "success" || \
                log_message "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $dir" "error"
        fi
        ((current++))
        show_progress $current $total
    done
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
move_files() {
    local src="$1"
    local dest="$2"
    local extensions=($3)
    local type_name="$4"
    local color="$5"
    local total_files=0
    local moved_files=0
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
    for ext in "${extensions[@]}"; do
        total_files=$((total_files + $(find "$src" -maxdepth 1 -type f -name "*.$ext" | wc -l)))
    done
    
    if [ $total_files -eq 0 ]; then
        results["$type_name"]="0 $color"
        return
    fi
    
    log_message "–û–±—Ä–∞–±–æ—Ç–∫–∞ $type_name..." "info"
    
    for ext in "${extensions[@]}"; do
        for file in "$src"/*."$ext"; do
            if [ -f "$file" ]; then
                if mv "$file" "$dest/" 2>/dev/null; then
                    ((moved_files++))
                    show_progress $moved_files $total_files
                else
                    log_message "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è: $file" "error"
                fi
            fi
        done
    done
    
    echo
    results["$type_name"]="$moved_files $color"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
move_documents() {
    local src="$1"
    local dest="$2"
    local extensions=("pdf" "doc" "docx" "xls" "xlsx" "ppt" "pptx" "txt" "rtf" "odt" "ods" "odp")
    
    move_files "$src" "$dest" "${extensions[*]}" "–î–æ–∫—É–º–µ–Ω—Ç—ã" "$BLUE"
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    local files_no_ext=("$src"/*)
    local count=0
    
    for file in "${files_no_ext[@]}"; do
        if [ -f "$file" ] && [[ ! "$file" =~ \. ]]; then
            if mv "$file" "$dest/" 2>/dev/null; then
                ((count++))
            else
                log_message "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è: $file" "error"
            fi
        fi
    done
    
    if [ $count -gt 0 ]; then
        results["–î–æ–∫—É–º–µ–Ω—Ç—ã –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"]="$count $BLUE"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
move_executables() {
    local src="$1"
    local dest="$2"
    local count=0
    local total=$(find "$src" -maxdepth 1 -type f -executable | wc -l)
    
    log_message "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤..." "info"
    
    while IFS= read -r -d '' file; do
        if mv "$file" "$dest/" 2>/dev/null; then
            ((count++))
            show_progress $count $total
        else
            log_message "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è: $file" "error"
        fi
    done < <(find "$src" -maxdepth 1 -type f -executable -print0)
    
    echo
    results["–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã"]="$count $PINK"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
cleanup_empty_dirs() {
    local dir="$1"
    find "$dir" -type d -empty -delete 2>/dev/null
    log_message "–£–¥–∞–ª–µ–Ω—ã –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏" "success"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_statistics() {
    print_header "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏"
    
    local total_files=0
    for key in "${!results[@]}"; do
        local count=$(echo "${results[$key]}" | cut -d' ' -f1)
        local color=$(echo "${results[$key]}" | cut -d' ' -f2)
        total_files=$((total_files + count))
        printf "${BOLD}%-25s${RESET}: ${color}%d${RESET} —Ñ–∞–π–ª–æ–≤\n" "$key" "$count"
    done
    
    print_separator
    printf "${BOLD}%-25s${RESET}: ${GREEN}%d${RESET} —Ñ–∞–π–ª–æ–≤\n" "–í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ" "$total_files"
    echo
}

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ —Å–∫—Ä–∏–ø—Ç–∞
print_header "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
declare -A results

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
create_directories

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
declare -A file_types=(
    ["–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"]="jpg jpeg png gif bmp tiff webp svg ico"
    ["–ú—É–∑—ã–∫–∞"]="mp3 wav flac ogg m4a aac wma"
    ["–í–∏–¥–µ–æ"]="mp4 mkv avi mov wmv MOV flv webm"
    ["–ê—Ä—Ö–∏–≤—ã"]="zip tgz tar gz bz2 xz rar 7z"
    ["DEB –ø–∞–∫–µ—Ç—ã"]="deb"
)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ —Ç–∏–ø–∞–º
for type in "${!file_types[@]}"; do
    case "$type" in
        "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            move_files "$DOWNLOADS_DIR" "$IMAGES_DIR" "${file_types[$type]}" "$type" "$PURPLE"
            ;;
        "–ú—É–∑—ã–∫–∞")
            move_files "$DOWNLOADS_DIR" "$MUSIC_DIR" "${file_types[$type]}" "$type" "$ORANGE"
            ;;
        "–í–∏–¥–µ–æ")
            move_files "$DOWNLOADS_DIR" "$VIDEOS_DIR" "${file_types[$type]}" "$type" "$GREEN"
            ;;
        "–ê—Ä—Ö–∏–≤—ã")
            move_files "$DOWNLOADS_DIR" "$ARCHIVES_DIR" "${file_types[$type]}" "$type" "$YELLOW"
            ;;
        "DEB –ø–∞–∫–µ—Ç—ã")
            move_files "$DOWNLOADS_DIR" "$PROGRAM_DIR" "${file_types[$type]}" "$type" "$PINK"
            ;;
    esac
done

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
move_documents "$DOWNLOADS_DIR" "$DOCUMENTS_DIR"
move_executables "$DOWNLOADS_DIR" "$PROGRAM_DIR"

# –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
cleanup_empty_dirs "$DOWNLOADS_DIR"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
show_statistics

log_message "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $LOG_FILE" "success"
