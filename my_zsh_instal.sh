#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly BLUE='\033[0;34m'
readonly YELLOW='\033[1;33m'
readonly NC='\033[0m' # No Color
readonly BOLD='\033[1m'

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly OH_MY_ZSH_INSTALL_URL="https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
readonly ZSH_SYNTAX_HIGHLIGHTING_URL="https://github.com/zsh-users/zsh-syntax-highlighting.git"
readonly ZSH_AUTOSUGGESTIONS_URL="https://github.com/zsh-users/zsh-autosuggestions.git"
readonly POWERLEVEL10K_URL="https://github.com/romkatv/powerlevel10k.git"
readonly FZF_URL="https://github.com/junegunn/fzf.git"
readonly CONFIG_REPO_URL="git@github.com:DarthSadist/my_zsh.git"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_step() {
    echo -e "\nüì¶ ${BOLD}$1${NC}"
}

print_info() {
    echo -e "   ‚ÑπÔ∏è  $1"
}

print_success() {
    echo -e "   ‚úÖ ${GREEN}$1${NC}"
}

print_error() {
    echo -e "   ‚ùå ${RED}$1${NC}"
}

print_warning() {
    echo -e "   ‚ö†Ô∏è  ${YELLOW}$1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
progress_bar() {
    local current=$1
    local total=$2
    local prefix=$3
    local width=30
    local percentage=$((current * 100 / total))
    local completed=$((width * current / total))
    local remaining=$((width - completed))
    
    printf "\r%s [" "$prefix"
    printf "%${completed}s" | tr ' ' '='
    printf "%${remaining}s" | tr ' ' ' '
    printf "] %3d%%" "$percentage"
    
    if [ "$current" -eq "$total" ]; then
        echo
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å–æ —Å–ø–∏–Ω–Ω–µ—Ä–æ–º
run_with_spinner() {
    local message=$1
    shift
    local spinner=( '‚†ã' '‚†ô' '‚†π' '‚†∏' '‚†º' '‚†¥' '‚†¶' '‚†ß' '‚†á' '‚†è' )
    local pid
    
    printf "   üîÑ %s " "$message"
    ("$@") &
    pid=$!
    
    local i=0
    while kill -0 $pid 2>/dev/null; do
        printf "\b%s" "${spinner[i]}"
        i=$(((i + 1) % ${#spinner[@]}))
        sleep 0.1
    done
    
    wait $pid
    local status=$?
    printf "\b "
    if [ $status -eq 0 ]; then
        echo "‚úÖ"
        return 0
    else
        echo "‚ùå"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local missing_deps=()
    local deps=("git" "curl" "zsh")

    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    
    for dep in "${deps[@]}"; do
        if ! command -v "$dep" >/dev/null 2>&1; then
            missing_deps+=("$dep")
        fi
    done

    if [ ${#missing_deps[@]} -ne 0 ]; then
        print_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
        for dep in "${missing_deps[@]}"; do
            echo "      - $dep"
        done
        print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é:"
        echo "      sudo apt-get update && sudo apt-get install ${missing_deps[*]}"
        return 1
    fi

    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub
check_github_access() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub..."
    if ! ssh -T git@github.com 2>&1 | grep -q "successfully authenticated"; then
        print_error "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub —á–µ—Ä–µ–∑ SSH"
        print_info "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        echo "      1. ssh-keygen -t ed25519 -C \"your_email@example.com\""
        echo "      2. eval \"\$(ssh-agent -s)\""
        echo "      3. ssh-add ~/.ssh/id_ed25519"
        echo "      4. cat ~/.ssh/id_ed25519.pub # –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –Ω–∞ GitHub"
        return 1
    fi
    print_success "–î–æ—Å—Ç—É–ø –∫ GitHub –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫
check_existing_installation() {
    local USER_HOME="$1"
    
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫"
    
    if [ -d "$USER_HOME/.oh-my-zsh" ] || [ -f "$USER_HOME/.zshrc" ]; then
        print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh-My-Zsh"
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        echo "      1) –£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
        echo "      2) –û—Ç–º–µ–Ω–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É"
        
        while true; do
            read -r choice
            case $choice in
                1)
                    if ! remove_existing_installation "$USER_HOME"; then
                        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É"
                        return 1
                    fi
                    return 0
                    ;;
                2)
                    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
                    exit 0
                    ;;
                *)
                    print_error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2"
                    ;;
            esac
        done
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫
remove_existing_installation() {
    local USER_HOME="$1"
    local current_shell=$(echo $SHELL)
    
    print_step "–£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫"
    
    # –í–æ–∑–≤—Ä–∞—Ç –∫ bash –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –æ–±–æ–ª–æ—á–∫–∞ zsh
    if [[ "$current_shell" == *"zsh"* ]]; then
        print_info "–°–º–µ–Ω–∞ –æ–±–æ–ª–æ—á–∫–∏ –Ω–∞ bash..."
        if ! chsh -s $(which bash) $(whoami); then
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –æ–±–æ–ª–æ—á–∫–∏ –Ω–∞ bash"
            return 1
        fi
    fi

    local components=(
        "$USER_HOME/.oh-my-zsh"
        "$USER_HOME/.powerlevel10k"
        "$USER_HOME/.zshrc"
        "$USER_HOME/.zsh_history"
        "$USER_HOME/.zcompdump*"
        "$USER_HOME/.p10k.zsh"
        "$USER_HOME/.fzf"
        "${ZSH_CUSTOM:-$USER_HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting"
        "${ZSH_CUSTOM:-$USER_HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions"
    )

    for component in "${components[@]}"; do
        if [ -e "$component" ]; then
            print_info "–£–¥–∞–ª–µ–Ω–∏–µ: $(basename "$component")..."
            rm -rf "$component" 2>/dev/null || sudo rm -rf "$component"
        fi
    done

    print_success "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ git clone
retry_git_clone() {
    local repo_url=$1
    local target_dir=$2
    local max_attempts=3
    local attempt=1

    while [ $attempt -le $max_attempts ]; do
        if git clone --depth=1 "$repo_url" "$target_dir" 2>/dev/null; then
            return 0
        fi
        print_warning "–ü–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $max_attempts –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞..."
        rm -rf "$target_dir"  # –û—á–∏—â–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
        ((attempt++))
        sleep 2
    done
    return 1
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–∞
install_plugin() {
    local plugin_name=$1
    local plugin_url=$2
    local install_dir=$3

    if [ -d "$install_dir" ]; then
        rm -rf "$install_dir"
    fi

    if retry_git_clone "$plugin_url" "$install_dir"; then
        print_success "$plugin_name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $plugin_name –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
install_zsh() {
    local USER_HOME="$1"

    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh"
    if [ ! -d "$USER_HOME/.oh-my-zsh" ]; then
        [ -f "$USER_HOME/.zshrc" ] && mv "$USER_HOME/.zshrc" "$USER_HOME/.zshrc.pre-oh-my-zsh"
        print_info "–ó–∞–≥—Ä—É–∑–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh..."
        if run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh" sh -c "$(curl -fsSL $OH_MY_ZSH_INSTALL_URL)" "" --unattended; then
            print_success "Oh My Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Oh My Zsh"
            exit 1
        fi
    fi

    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤"
    local plugins_dir="${ZSH_CUSTOM:-$USER_HOME/.oh-my-zsh/custom}/plugins"
    mkdir -p "$plugins_dir"
    
    local total_plugins=4
    local current_plugin=0
    
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤..."

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ zsh-syntax-highlighting
    if [ ! -d "$plugins_dir/zsh-syntax-highlighting" ]; then
        ((current_plugin++))
        install_plugin "zsh-syntax-highlighting" "$ZSH_SYNTAX_HIGHLIGHTING_URL" "$plugins_dir/zsh-syntax-highlighting"
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ zsh-autosuggestions
    if [ ! -d "$plugins_dir/zsh-autosuggestions" ]; then
        ((current_plugin++))
        install_plugin "zsh-autosuggestions" "$ZSH_AUTOSUGGESTIONS_URL" "$plugins_dir/zsh-autosuggestions"
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ powerlevel10k
    if [ ! -d "$USER_HOME/.powerlevel10k" ]; then
        ((current_plugin++))
        install_plugin "powerlevel10k" "$POWERLEVEL10K_URL" "$USER_HOME/.powerlevel10k"
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ fzf
    if [ ! -d "$USER_HOME/.fzf" ]; then
        ((current_plugin++))
        if run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ fzf" git clone --depth 1 "$FZF_URL" "$USER_HOME/.fzf"; then
            if run_with_spinner "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ fzf" "$USER_HOME/.fzf/install" --all; then
                print_success "fzf —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ fzf"
            fi
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ fzf"
        fi
    fi

    install_config "$USER_HOME"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_config() {
    local USER_HOME="$1"
    
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –∫–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    TEMP_DIR=$(mktemp -d)
    print_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

    if run_with_spinner "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" git clone "$CONFIG_REPO_URL" "$TEMP_DIR"; then
        print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        if [ ! -d "$TEMP_DIR" ]; then
            print_error "–û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
            exit 1
        fi

        # –í—ã–≤–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        ls -la "$TEMP_DIR"

        # –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É FZF_BASE
        if [ -f "$TEMP_DIR/.zshrc" ]; then
            print_info "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
            if run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" cp "$TEMP_DIR/.zshrc" "$USER_HOME/.zshrc"; then
                echo -e "\n# fzf configuration\nexport FZF_BASE=$USER_HOME/.fzf" >> "$USER_HOME/.zshrc"
                print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"
                rm -rf "$TEMP_DIR"
                exit 1
            fi
        else
            print_error "–§–∞–π–ª .zshrc –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
            print_info "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
            ls -la "$TEMP_DIR"
            rm -rf "$TEMP_DIR"
            exit 1
        fi
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
        print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $CONFIG_REPO_URL"
        rm -rf "$TEMP_DIR"
        exit 1
    fi

    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf "$TEMP_DIR"

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ñ–∞–π–ª—ã
    chown -R $(whoami):$(whoami) "$USER_HOME/.oh-my-zsh" "$USER_HOME/.zshrc" "$USER_HOME/.powerlevel10k" 2>/dev/null

    echo
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo
    print_info "–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "      1. –ó–∞–∫—Ä–æ–π—Ç–µ —Ç–µ–∫—É—â–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª"
    echo "      2. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª"
    echo "      3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: p10k configure"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–π
check_versions() {
    local USER_HOME="$1"
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ zsh
    if command -v zsh >/dev/null 2>&1; then
        local zsh_version=$(zsh --version | cut -d' ' -f2)
        print_info "–í–µ—Ä—Å–∏—è Zsh: $zsh_version"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ oh-my-zsh
    if [ -d "$USER_HOME/.oh-my-zsh" ]; then
        if [ -f "$USER_HOME/.oh-my-zsh/oh-my-zsh.sh" ]; then
            local omz_version=$(grep 'OMZVERSION=' "$USER_HOME/.oh-my-zsh/oh-my-zsh.sh" | cut -d'"' -f2)
            print_info "–í–µ—Ä—Å–∏—è Oh My Zsh: $omz_version"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ powerlevel10k
    if [ -d "$USER_HOME/.powerlevel10k" ]; then
        cd "$USER_HOME/.powerlevel10k" || return
        local p10k_version=$(git describe --tags --abbrev=0 2>/dev/null)
        print_info "–í–µ—Ä—Å–∏—è Powerlevel10k: $p10k_version"
        cd - >/dev/null || return
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
update_components() {
    local USER_HOME="$1"
    print_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ oh-my-zsh
    if [ -d "$USER_HOME/.oh-my-zsh" ]; then
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Oh My Zsh..."
        if run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Oh My Zsh" env ZSH="$USER_HOME/.oh-my-zsh" sh "$USER_HOME/.oh-my-zsh/tools/upgrade.sh"; then
            print_success "Oh My Zsh –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Oh My Zsh"
        fi
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ powerlevel10k
    if [ -d "$USER_HOME/.powerlevel10k" ]; then
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Powerlevel10k..."
        cd "$USER_HOME/.powerlevel10k" || return
        if run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Powerlevel10k" git pull --quiet; then
            print_success "Powerlevel10k –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Powerlevel10k"
        fi
        cd - >/dev/null || return
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–æ–≤
    local plugins_dir="${ZSH_CUSTOM:-$USER_HOME/.oh-my-zsh/custom}/plugins"
    
    if [ -d "$plugins_dir/zsh-syntax-highlighting" ]; then
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ zsh-syntax-highlighting..."
        cd "$plugins_dir/zsh-syntax-highlighting" || return
        if run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ zsh-syntax-highlighting" git pull --quiet; then
            print_success "zsh-syntax-highlighting –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ zsh-syntax-highlighting"
        fi
        cd - >/dev/null || return
    fi
    
    if [ -d "$plugins_dir/zsh-autosuggestions" ]; then
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ zsh-autosuggestions..."
        cd "$plugins_dir/zsh-autosuggestions" || return
        if run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ zsh-autosuggestions" git pull --quiet; then
            print_success "zsh-autosuggestions –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ zsh-autosuggestions"
        fi
        cd - >/dev/null || return
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ fzf
    if [ -d "$USER_HOME/.fzf" ]; then
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ fzf..."
        cd "$USER_HOME/.fzf" || return
        if run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ fzf" git pull --quiet; then
            if run_with_spinner "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ fzf" ./install --all; then
                print_success "fzf –æ–±–Ω–æ–≤–ª–µ–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ fzf"
            fi
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ fzf"
        fi
        cd - >/dev/null || return
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    clear
    echo "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
    echo "‚îÇ     –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh –∏ Oh My Zsh     ‚îÇ"
    echo "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
    echo
    print_info "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "      1) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "      2) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è root"
    echo "      3) –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    echo "      4) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    echo "      5) –û—Ç–º–µ–Ω–∞"
    echo
    
    while true; do
        read -r choice
        case $choice in
            1)
                check_dependencies
                if [ $? -eq 0 ]; then
                    check_github_access
                    if [ $? -eq 0 ]; then
                        check_existing_installation "$HOME"
                        if [ $? -eq 0 ]; then
                            install_zsh "$HOME"
                        fi
                    fi
                fi
                break
                ;;
            2)
                if [ "$EUID" -ne 0 ]; then
                    print_error "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ root —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                    exit 1
                fi
                check_dependencies
                if [ $? -eq 0 ]; then
                    check_github_access
                    if [ $? -eq 0 ]; then
                        check_existing_installation "/root"
                        if [ $? -eq 0 ]; then
                            install_zsh "/root"
                        fi
                    fi
                fi
                break
                ;;
            3)
                check_versions "$HOME"
                break
                ;;
            4)
                update_components "$HOME"
                break
                ;;
            5)
                print_info "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
                exit 0
                ;;
            *)
                print_error "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5"
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main
